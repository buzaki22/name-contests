# login to remote repo and push new artfact

docker login rg.fr-par.scw.cloud/name -u nologin -p 06297c6c-84d7-411b-80d6-c5edd17de9bc
docker tag name-contests_app:latest rg.fr-par.scw.cloud/name/name-contests_app:latest
docker push rg.fr-par.scw.cloud/name/name-contests_app:latest
docker tag name-contests_web:latest rg.fr-par.scw.cloud/name/name-contests_web:latest
docker push rg.fr-par.scw.cloud/name/name-contests_web:latest

steps : 
import sql
create db : app


name-contests_app:latest
name-contests_web:latest
https://hub.docker.com/r/paulczar/omgwtfssl/

 curl -L "https://github.com/docker/compose/releases/download/1.23.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose

export DOCKER_TLS_VERIFY=1
export DOCKER_CERT_PATH=/root/docker2

export DOCKER_HOST=tcp://example.com:2376
docker info
curl -fsSL https://download.docker.com/linux/ubuntu/gpg |  apt-key add -
 curl -fsSL https://download.docker.com/linux/debian/gpg |  apt-key add -
docker run --rm -v /etc/docker/ssl:/server \
    -v $(pwd)/.docker:/certs \
    -e SSL_IP=127.0.0.1,172.17.8.101,51.15.240.232,10.12.155.15 \
    -e SSL_DNS=docker.local -e SSL_KEY=/server/key.pem \
    -e SSL_CERT=/server/cert.pem paulczar/omgwtfssl


0.0.0.0:2376 -H  --tlsverify --tlscacert=/etc/docker/ssl/ca.pem --tlscert=/etc/docker/ssl/cert.pem --tlskey=/etc/docker/ssl/key.pem

docker run --rm -v $(pwd)/.docker:/certs \
    -e SSL_IP=127.0.0.1,172.17.8.101,51.15.240.232,10.12.155.15 \
   -e SSL_DNS=docker.local paulczar/omgwtfssl 


 docker run -v /tmp/certs:/certs \
  -e SSL_SUBJECT=test.example.com   paulczar/omgwtfssl


command: bash -c "sleep 5; start.sh"
command: bash -c "for i in {1..100} ; do if ! curl -s rabbitmq:5672 > /dev/null ; then echo waiting on rabbitmq for $i seconds; sleep $i; fi; done; start.sh"


cat docker-compose-test.yaml > docker-compose.yaml
docker-compose down
docker-compose up mongodb postgres app

jenkins
docker pull jenkins

docker volume create --name jenkins_data
docker run --name jenkins -d -v jenkins_data:/var/jenkins_home -p 8080:8080 -p 50000:50000  jenkins/jenkins:lts
docker runâ€Š--name jenkinsci -p 8080:8080 jenkins/
curl -sL https://deb.nodesource.com/setup_12.x |  -E bash -


SELECT
   *
FROM
   pg_catalog.pg_tables
WHERE
   schemaname != 'pg_catalog'
AND schemaname != 'information_schema';

ASF230fik230